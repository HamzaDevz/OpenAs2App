name: Check for new OpenAS2 Upstream Release

on:
  # Se déclenche tous les jours à 3h du matin (vous pouvez ajuster)
  schedule:
    - cron: '0 3 * * *'
  # Permet aussi de le lancer manuellement pour tester
  workflow_dispatch:

jobs:
  check-and-release:
    runs-on: ubuntu-latest
    permissions:
      # Donne au workflow la permission de créer des releases sur votre fork
      contents: write

    steps:
      # 1. Récupère la dernière release du dépôt OpenAS2 officiel
      - name: Get latest upstream release tag
        id: upstream_release
        run: |
          LATEST_TAG=$(curl -sL "https://api.github.com/repos/OpenAS2/OpenAs2App/releases/latest" | jq -r ".tag_name")
          if [ -z "$LATEST_TAG" ]; then
            echo "Could not fetch latest upstream tag. Exiting."
            exit 1
          fi
          echo "tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      # 2. Récupère la dernière release de notre propre fork
      - name: Get latest self fork release tag
        id: self_release
        run: |
          LATEST_TAG=$(curl -sL "https://api.github.com/repos/${{ github.repository }}/releases/latest" | jq -r ".tag_name")
          # Si aucune release n'existe sur le fork, on met une valeur par défaut pour continuer
          if [ "$LATEST_TAG" == "null" ] || [ -z "$LATEST_TAG" ]; then
            LATEST_TAG="v0.0.0"
          fi
          echo "tag=$LATEST_TAG" >> $GITHUB_OUTPUT

      # 3. Compare les deux versions
      - name: Compare tags and decide to proceed
        id: decision
        run: |
          echo "Upstream tag: ${{ steps.upstream_release.outputs.tag }}"
          echo "Our latest tag: ${{ steps.self_release.outputs.tag }}"
          if [ "${{ steps.upstream_release.outputs.tag }}" == "${{ steps.self_release.outputs.tag }}" ]; then
            echo "Tags are the same. Nothing to do."
            echo "proceed=false" >> $GITHUB_OUTPUT
          else
            echo "New upstream release found! Proceeding to create a new release on this fork."
            echo "proceed=true" >> $GITHUB_OUTPUT
          fi

      # 4. Si une nouvelle version est trouvée, crée une release sur notre fork
      #    Ceci déclenchera automatiquement notre autre workflow (docker-build.yml) !
      - name: Create new release on fork to trigger build
        if: steps.decision.outputs.proceed == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          UPSTREAM_TAG: ${{ steps.upstream_release.outputs.tag }}
        run: |
          gh release create "$UPSTREAM_TAG" \
             --repo "$GITHUB_REPOSITORY" \
             --title "Sync with upstream: $UPSTREAM_TAG" \
             --notes "Automated release to trigger build for upstream version $UPSTREAM_TAG."
